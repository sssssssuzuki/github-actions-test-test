cmake_minimum_required(VERSION 3.10)

project(github-actions-sample)
set(VERSION_MAJOR   0   CACHE STRING "Project major version number.")
set(VERSION_MINOR   1   CACHE STRING "Project minor version number.")
set(VERSION_PATCH   2   CACHE STRING "Project patch version number.")
mark_as_advanced(VERSION_MAJOR VERSION_MINOR VERSION_PATCH)

if(WIN32)
	set(OS win32)
elseif(APPLE)
	set(OS macosx)
else()
	set(OS linux)
endif()
if(WIN32)
    include(cmakes/win_vs.cmake)
elseif(APPLE)
    include(cmakes/mac.cmake)
else()
    include(cmakes/linux.cmake)
endif()

set (CMAKE_CXX_STANDARD 17)

link_directories(lib)
add_executable(main main.cpp)
include_directories(include)
target_link_libraries(main sayhello)
